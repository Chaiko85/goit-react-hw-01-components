{"version":3,"sources":["components/social-profile/Profile.module.css","components/statistics/Statistics.module.css","components/friend-list/FriendList.module.css","components/transaction-history/Transactions.module.css","components/social-profile/Profile.jsx","components/statistics/Statistics.jsx","components/friend-list/FriendList.jsx","components/transaction-history/TransactionHistory.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","Statistics","title","statistics","statList","map","item","key","id","backgroundColor","Math","floor","random","percentage","FriendList","friends","friendList","friend","friendListItem","status","isOnline","background","width","TransactionHistory","items","class","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63a1a14b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1PAZL\",\"description\":\"Profile_description__3KfXh\",\"avatar\":\"Profile_avatar__1IHYb\",\"name\":\"Profile_name__1Unpg\",\"tag\":\"Profile_tag__3pTt9\",\"location\":\"Profile_location__2yAy0\",\"stats\":\"Profile_stats__13vKW\",\"label\":\"Profile_label__GT7UV\",\"quantity\":\"Profile_quantity__1cWIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2oj2c\",\"title\":\"Statistics_title__Ddu4a\",\"statList\":\"Statistics_statList__1wA6E\",\"item\":\"Statistics_item__2F2kN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__FM3Pl\",\"friendListItem\":\"FriendList_friendListItem__2MwLT\",\"status\":\"FriendList_status__1kW-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__2f_TS\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Profile.module.css\";\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={style.avatar} />\r\n        <p className={style.name}>{name}</p>\r\n        <p className={style.tag}>@{tag}</p>\r\n        <p className={style.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={style.stats}>\r\n        <li>\r\n          <span className={style.label}>Followers</span>\r\n          <span className={style.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={style.label}>Views</span>\r\n          <span className={style.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={style.label}>Likes</span>\r\n          <span className={style.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar:\r\n    \"https://i.pinimg.com/originals/a0/40/66/a04066a2d1fcf25df39c599e093995c8.jpg\",\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Statistics.module.css\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className={style.statistics}>\r\n      {title && <h2 className={style.title}>{title}</h2>}\r\n\r\n      <ul className={style.statList}>\r\n        {stats.map((item) => (\r\n          <li\r\n            key={item.id}\r\n            className={style.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span className=\"label\">{item.label}</span>\r\n            <span className=\"percentage\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: \"Upload stats\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nfunction randomColor() {\r\n  return `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n    Math.random() * 256\r\n  )}, ${Math.floor(Math.random() * 256)})`;\r\n}\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./FriendList.module.css\";\r\n\r\nfunction FriendList({ friends }) {\r\n  const onLine = \"green\";\r\n  const offLine = \"red\";\r\n\r\n  return (\r\n    <ul className={style.friendList}>\r\n      {friends.map((friend) => (\r\n        <li key={friend.id} className={style.friendListItem}>\r\n          <span\r\n            className={style.status}\r\n            style={\r\n              friend.isOnline ? { background: onLine } : { background: offLine }\r\n            }\r\n          ></span>\r\n          <img\r\n            className=\"avatar\"\r\n            src={friend.avatar}\r\n            alt={friend.name}\r\n            width=\"48\"\r\n          />\r\n          <p className=\"name\">{friend.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.defaultProps = {\r\n  avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/shojberg/128.jpg\",\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Transactions.module.css\";\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table class={style.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./components/social-profile/Profile\";\nimport user from \"./components/social-profile/user.json\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport statisticalData from \"./components/statistics/statistical-data.json\";\nimport FriendList from \"./components/friend-list/FriendList\";\nimport friends from \"./components/friend-list/friends.json\";\nimport TransactionHistory from \"./components/transaction-history/TransactionHistory\";\nimport transactions from \"./components/transaction-history/transactions.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}